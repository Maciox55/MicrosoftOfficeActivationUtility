<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        Qf8A/wD/AP8A/wD/Af8B+wT/C7hJ/wXeIv8A/wD/C+Qj/zZ1sI8E9AsPAP8AbUJM1wBDTdcKRE7ivi83
        4P8hKN7/Iine/yIp3v8fJ97/Sk/k/+/v/f//////4eH6/zk/4f8gKN7/Iifg/xpbqv8E3SL/GtQ//9Pv
        4f//////qf+p/w3/Df8A/wD/AP8A/wD/AP8A/wD/AP8A/wD7A/8emHn/RE3ivjVxrAwA/wASQ03bAERP
        3BdDTeLXKzLf/yIo3v8iKd7/Iine/x8n3v9KT+T/7+/9///////h4fr/OT/h/yAo3v8iKd7/Iivc/xVy
        kf8sbaz/29v6///////6//r/lf+V/xz/HP8A/wD/AP8A/wD/AP8C8BD/EJhq/yk81v9DTOPXRE7cF0NN
        2wBDTdwARU/cIUJM4uIpMN//Iine/yIp3v8iKd7/Hyfe/0pP5P/v7/3//////+Hh+v85P+H/ICje/yIp
        3v8iKd7/ISfe/zQ64f/a2/n////////////+//3/yfXS/y+ggv8OnGX/Eo12/xtYrf8hK9v/KS/g/0JM
        4uJFTd4gAP8AA0NN3ABFT9whQkzi4ikw3/8iKd7/Iine/yIp3v8fJ97/Sk/k/+/v/f//////4eH6/zk/
        4f8gKN7/Iine/yIp3v8hKN7/NDrh/83b7P+z/7H/+P/4///////v7/3/S03n/x8k4P8jJuH/Iibh/yIo
        3v8pMN//Qk3g4kRQ2iAA/wACRE7cAEVP3BdDTeLYKzLf/yIo3v8iKd7/Iine/x8n3v9KT+T/7+/9////
        ///h4fr/OT/h/yAo3v8iKd7/Iine/yEo3v80OuH/0try/9X/0//7//v//////+/v/f9KT+T/Hyfe/yIp
        3v8iKd7/Iije/yoz3/8qjZHkDtstJRPNPQBCTdcAQ03XCkRO4r4vN+D/ISje/yIp3v8iKd7/Hyfe/0pP
        5P/v7/z//////+Hh+v85P+H/ICje/yIp3v8iKd7/ISje/zM64f/Z2vn/////////////////7+/9/0pP
        5P8fJ97/Iine/yIp3v8hKN7/Lzfg/ztmw8MXv0sOG7VYAEBKywBPV/8ARVDhkTY/4f8iKd7/Iine/yIp
        3v8fJ97/Sk/k/+/v/P//////4OH6/zc94f8dJN3/ICfe/yIp3v8hKN7/Mznh/9na+f//////////////
        ///v7/3/Sk/k/x8n3v8iKd7/Iine/yIp3v82P+H/Rk7jkEZo8ABFQNwAMUCCAEVP4wBFUOBRPkji+SUs
        3v8iKd7/Iine/yAn3v9HTeP/6+z8///////z8/3/mp3w/2Rp6P9BR+P/KjHf/x8m3v8wNuD/2Nn5////
        /////////////+/v/f9KT+T/Hyfe/yIp3v8iKd7/JSze/z5I4vlFUOBRRU/jADA/egAAAAAARE7dAERP
        3BdETuLNLzfg/yEo3v8iKd7/ISje/yox3/9scen/trf0/+vr/P///////Pz+/+jo+//GyPb/m57w/3x/
        6//j4/v/////////////////7+/9/0pP5P8fJ97/Iine/yEo3v8vN+D/RE7izURO3BZETtwAAAAAAAAA
        AABAS8wASFHwAEVQ4HA9RuL9JSze/yIp3v8iKd7/ISje/x8m3f8mLd//SU7k/4mM7f/Nzvf/9/f+////
        /////////f3///7+///////////////////r6/z/SE3k/yAn3v8iKd7/JSze/z1G4v1FUOBvSFHtAEFM
        0QAAAAAAAAAAAAAAAABETt0ARE7cFUVP4sA0POH/Iine/yIp3v8iKd7/Iine/yIp3v8gJ97/Hybd/y81
        4P9dYuf/o6Xx/9/g+v/8/P///v7///Dw/f/Nz/f/nJ7w/2No6P8qMd//ISje/yIp3v80POH/RU/iwERO
        3BVETt4AAAAAAAAAAAAAAAAAAAAAAEFLzQBFT+QARU/fQENM4uUvN+D/Iine/yIp3v8iKd7/Iine/yIp
        3v8iKd7/ISje/x8m3v8iKd7/PELi/3R46v9+gez/TlTl/y414P8gJ97/Hybd/yEo3v8iKd7/Lzfg/0NN
        4uVFT99ARU/kAEFMzAAAAAAAAAAAAAAAAAAAAAAAAAAAAENN1wAjLD4ARU/gXUJL4u4vN+D/Iine/yIp
        3v8iKd7/Iine/yIp3v8iKd7/Iine/yIp3v8gJ97/Hybd/x4l3f8fJt7/ISje/yIp3v8iKd7/Iine/y83
        4P9CS+LtRU/gXRwoKgBDTdcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAENN2gBBS9MCRU/gXUNN
        4uY0POH/JSze/yEo3v8iKd7/Iine/yIp3v8iKd7/Iine/yIp3v8iKd7/Iine/yIp3v8iKd7/ISje/yUs
        3v80POH/Q03i5UVP4F1BTNUCQ07bAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAENN
        2AA+SccBRU/fP0VP4sE9RuL8Lzfg/yUs3v8iKd7/ISje/yIo3v8iKd7/Iine/yIo3v8hKN7/Iine/yUs
        3v8vN+D/PUbi/EVP4sFFT98/PkjGAUNN2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAEFMzABGUOQARE7cFUVQ4W9ETuLOPkji+TY/4f8vN+D/KzLf/ykw3/8pMN//KzLf/y83
        4P82P+H/Pkji+URO4s5FUOBvRE7dFUZQ5QBBS8sAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABBTM8AOEOrAERP3BZGUOBRRlDhkURO4r9DTeLYQkzi4kJM
        4uJDTeLYRE7iv0ZQ4ZFGUOBRRE/cFjdCqQBBTNAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEBLyQA/SsMBQ07XCkRP
        3BhFT9whRU/cIURP3BhDTtcKPkrCAUBLyQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA///4eP/wCHj/wAAA/wAAAPwAAAH4AAAD+AAAD/AAAAfgAAAD4AAAA8AA
        AAPAAAACwAAAAIAAAACAAAABgAAAAIAAAACAAAABgAAAAcAAAAPAAAADwAAAA+AAAAfgAAAH8AAAD/gA
        AB/4AAAf/AAAP/8AAP//wAP///AP//////8=
</value>
  </data>
</root>